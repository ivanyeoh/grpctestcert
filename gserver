#!/usr/bin/env ruby

this_dir = File.expand_path(File.dirname(__FILE__))
lib_dir = File.join(this_dir, 'lib')
$LOAD_PATH.unshift(lib_dir) unless $LOAD_PATH.include?(lib_dir)

require 'grpc'
require 'helloworld_services'
require './config'

# GreeterServer is simple server that implements the Helloworld Greeter server.
class GreeterServer < Helloworld::Greeter::Service
  # say_hello implements the SayHello rpc method.
  def say_hello(hello_req, _unused_call)
    Helloworld::HelloReply.new(message: "Hello #{hello_req.name}")
  end
end

def load_certs
  test_root = File.join(File.dirname(__FILE__))
  files = [Config.ca_pem, Config.server_key, Config.server_pem]
  contents = files.map { |f| File.open(File.join(test_root, f)).read }
  [contents[0], [{ private_key: contents[1], cert_chain: contents[2] }], true]
end

def main
  ssl_creds = GRPC::Core::ServerCredentials.new(*load_certs)

  s = GRPC::RpcServer.new
  s.add_http2_port('0.0.0.0:50051', ssl_creds)
  s.handle(GreeterServer)
  s.run_till_terminated
  
end

main
